[DD] done for a first try

class Controller
  [DD] associatedChars = new Character.Animals[4];

  [DD] function Controller.AddPlayer                        hardcoded 4 comparison
  [DD] function Controller.AssociateCharacter               hardcoded 4 comparison
  [DD] function Controller.ClearPlayers                     hardcoded 4 size
  [DD] function Controller.GetLastPlayerNumber              hardcoded 3 comparison (in for loop 3 to 0) 
  [DD] function Controller.GetLastPlayerNumberAfter         hardcoded 3 comparison (in for loop 3 to 0) 
  [no clue] function Controller.RemovePlayer                num calc problems


[DD] class ControllerDisconnect
  [DD] ConnectPrompts      = init to 4 MonoBehaviour
  [DD] orphanedReceivers   = List with 4 entries
  [DD] orphanedCharacters  = new Character.Animals[4][];    
  [DD? showingPrompts      = new bool[4];                   

  [DD] function ControllerDisconnect.SetPromptForPlayer     hardcoded 4 comparison


[DD] class GraphScoreBoard
  [DD] ScorePositions = new RectTransform[4];               

  [DD] function GraphScoreBoard.SetPlayerCount              hardcoded 4 comparison, add ScorePositions for additional players
  [DD] function GraphScoreBoard.SetPlayerCharacter          hardcoded 3 comparison (order: 0 to 3)


[DD] InputManager
  [DD] function InputManager.EnableNativeInput              patch getter to always return true, so we can use more controllers


[DD] class InventoryBook
  [DD] function InventoryBook.HasCursor                     hardcoded 4 comparison
  [DD] function InventoryBook.GetCursor                     hardcoded 4 comparison
  [DD] function InventoryBook.AddPlayer                     hardcoded 4 comparison, fixup cursor spawn location for additional players


[DD] class KickTracker
  [DD] constructor KickTracker                              hardcoded 4 comparison and size

  [DD] function KickTracker.ClearPlayer                     hardcoded 4 comparison
  [DD] function KickTracker.CountVotes                      hardcoded 4 comparison
  [DD] function KickTracker.VotesFromNetworkNumber          hardcoded 4 comparison    [!U8 missing]
  
  
[DD] class LevelPortal     
  [DD] VoteArrows                                           fudge with VoteArrows


[DD] class LevelSelectController
  [DD] JoinedPlayers = new LobbyPlayer[4];
  [DD] PlayerJoinIndicators                                 map indicators to 0..3, we reuse existing 4 indicators for multiple players 
  [DD] CursorSpawnPoint		                                  map cursor spawn points to 0..3 (TODO: add new positions)
  [DD] UndergroundCharacterPosition                         map cursor spawn points to 0..3 (TODO: add new positions)
  
  
[DD] class LobbyPointCounter
  [DD] playerJoinedGame
  [DD] playerPlayedGame
  [DD] playerAFK
  
  [DD] function handleEvent                                 hardcoded 4 GameStartEvent
  [DD] function Reset                                       hardcoded reset of playerPlayedGame for 0..3 


[DD] class LobbySkillTracker
  [DD] ratings = new Rating[4];                                     
  
  [DD] function UpdateLobbyInfo                             hardcoded 4 comparison !!carefull Ldc_I4_4 in stelem.ref array construction
  [DD] function RecalculateScores                           hardcoded 4 comparison !!carefull 4 also used as unrelated array index
  
  
[DD] class PartyBox
  [DD] function PartyBox.AddPlayer	                        hardcoded 4 comparison !!carefull additional ldc.i4.4 in IL code unrelated to player number as array index
  [DD] function PartyBox.SetPlayerCount	                    hardcoded 4 comparison
  

[DD] class StatTracker
  [DD] saveFiles = new SaveFileData[4];
  [DD] saveStatuses = new StatTracker.SaveFileStatus[4];
  
  [DD] function StatTracker.GetSaveFileDataForLocalPlayer   hardcoded 4
  [DD] function StatTracker.OnLocalPlayerAdded              hardcoded 4
  [DD] function StatTracker.SaveGameForAnimal               hardcoded 4


[DD] class VersusControl
  [DD] winOrder = new GamePlayer[4];                           
  [DD] RemainingPlacements = new int[4];                       
      
  [DD] function VersusControl.playersLeftToPlace            hardcoded 4 comparison
  [DD] function ShuffleStartPosition                        fails for larger amount of players (integer overflow???)


[DD] class SteamMatchmaker
  [DD] function createSocialLobby                           hardcoded 4 size
  [DD] function OnSteamLobbyJoinRequested                   hardcoded 5 comparison 


[DD] class LobbyManager
  [DD] function OnLobbyClientAddPlayerFailed                hardcoded 5 comparison
  
  
class PickableNetworkButton
  [DD] function OnAccept                                    hardcoded 4 //this.NumberOfPlayersInSocialLobby < 4 
  [DD] function Update                                      hardcoded 4 // !!carefull invite code also checks 4 
  function SetSearchResultInfo                              hardcoded 4 in string ... //max number of players displayed


[DD] class SteamLobbySearchList
  [DD] function checkForListUpdates                         hardcoded 4 comparison


[DD] class UnityMatchmaker
  [DD] function CheckHostConnectivity                       hardcoded 4 comparison
  [DD] function CreateUnityMatch                            hardcoded 4 size


[DD] class NetworkLobbyManager
  [DD] m_MaxPlayers = 4;      


[DD] class GameSettings
  [DD] int MaxPlayers = 4;
  [DD] PlayerColors                                         Random generate colors for new players


[DD] class PlayerManager                                    maybe not needed if GameSettings.GetInstance().MaxPlayers is correct from the start                          
  [DD] maxPlayers
    playerList


[DD] class LobbyManager
  [DD] lobbySlots
    
    
[DD] class ChallengeScoreboard
  [DD] players
  [DD] function CollectPlayerIds
    
    
[DD] class Tablet
  [DD] untrackedCursors
  
  
[DD] GameState
  [DD] PlayerScores
  

[DD] class TurnIndicator
  [DD] function SetPlayerCount                              hardcoded 4 comparison

  
[DD] class SwitchController
  [DD] function Reset                                       hardcoded 4 size
  
  
[DD] class KeyboardInput
  [DD] function Reset                                       hardcoded 4 size

  
[DD] class GamesparksMatchmakingLobby
  [DD] function SetPlayerCount                              cap reported player number at 3
  
  
[DD] class SteamMatchmakingLobby
  [DD] function SetPlayerCount                              cap reported player number at 3


[DD] class LivesDisplayController
  [DD] livesDisplayBoxes                                    not enough livesDisplayBoxes for more than 8 players ...


[DD] class PlayerStatusDisplay
  [DD] public StatusSlot[] Slots                            not enough Slots for more than 4 players (Challenge mode)
  [DD] function SetSlotCount                                hardcoded 4

